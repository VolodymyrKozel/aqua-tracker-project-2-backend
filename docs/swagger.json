{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "AquaTrack App",
    "license": {
      "name": "Apache 2.0",
      "url": "<http://www.apache.org/licenses/LICENSE-2.0.html>"
    },
    "description": "This is a documentation of AquaTrack App\n"
  },
  "servers": [
    {
      "url": "<http://localhost:4000>"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Users",
      "description": "Users operations."
    },
    {
      "name": "Water",
      "description": "Operations to track the water the user drinks."
    },
    {
      "name": "Water{id}",
      "description": "Operations with glass."
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "summary": "Register a new user",
        "operationId": "registerUser",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "google@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "A213warl"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "subscription": {
                          "type": "string"
                        },
                        "status": {
                          "type": "integer",
                          "example": 201
                        },
                        "message": {
                          "type": "string",
                          "example": "Successfully registered user!"
                        },
                        "data": {
                          "type": "object",
                          "$ref": "#/components/schemas/user"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "john@gmail.com"
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "example": "12345678"
          },
          "gender": {
            "description": "User's gender",
            "type": "string",
            "enum": [
              "undefined",
              "woman",
              "man"
            ],
            "example": "undefined"
          },
          "weight": {
            "description": "User's weight",
            "type": "number",
            "example": 70
          },
          "activeTimeSports": {
            "description": "User's active time in sports",
            "type": "number",
            "example": 5
          },
          "waterDrink": {
            "description": "User's water consumption in liters",
            "type": "number",
            "example": 1.8
          },
          "token": {
            "description": "User's authentication token",
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
          },
          "tempToken": {
            "description": "User's temporary token",
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
          },
          "avatarURL": {
            "description": "Link to User's avatar",
            "type": "string",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          },
          "googleId": {
            "description": "User's Google ID",
            "type": "string",
            "example": "1234567890"
          },
          "verify": {
            "description": "User's verification status",
            "type": "boolean",
            "example": false
          },
          "verificationToken": {
            "description": "User's verification token",
            "type": "string",
            "example": "1e06baac-fbeb-4586-97ca-85f69cccc744"
          },
          "displayName": {
            "description": "User's display name",
            "type": "string",
            "example": "JohnD"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad request!",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad request!"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}