{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "AquaTrack App",
    "license": {
      "name": "Apache 2.0",
      "url": "<http://www.apache.org/licenses/LICENSE-2.0.html>"
    },
    "description": "This is a documentation of AquaTrack App\n"
  },
  "servers": [
    {
      "url": "<http://localhost:4000>"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Users",
      "description": "Users operations."
    },
    {
      "name": "Water",
      "description": "Operations to track the water the user drinks."
    },
    {
      "name": "Water{id}",
      "description": "Operations with glass."
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "summary": "Register a new user",
        "operationId": "registerUser",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "google@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "A213warl"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "subscription": {
                          "type": "string"
                        },
                        "status": {
                          "type": "integer",
                          "example": 201
                        },
                        "message": {
                          "type": "string",
                          "example": "Successfully registered user!"
                        },
                        "data": {
                          "type": "object",
                          "$ref": "#/components/schemas/user"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Log in to get access token",
        "operationId": "logIn",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "google@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "A213warl"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "subscription": {
                          "type": "string"
                        },
                        "status": {
                          "type": "integer",
                          "example": 200
                        },
                        "message": {
                          "type": "string",
                          "example": "Successfully logged in an user!"
                        },
                        "data": {
                          "type": "object",
                          "$ref": "#/components/schemas/user"
                        },
                        "session": {
                          "type": "object",
                          "$ref": "#/components/schemas/session"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "summary": "Get current user information",
        "operationId": "getCurrentUser",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current user information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "507f1f77bcf86cd799439011"
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string"
                    },
                    "gender": {
                      "type": "string",
                      "enum": [
                        "undefined",
                        "woman",
                        "man"
                      ],
                      "example": "undefined"
                    },
                    "weight": {
                      "type": "number",
                      "example": 70
                    },
                    "activeTimeSports": {
                      "type": "number",
                      "example": 5
                    },
                    "waterDrink": {
                      "type": "number",
                      "example": 1.8
                    },
                    "avatarURL": {
                      "type": "string",
                      "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "summary": "Logout the current user",
        "operationId": "logOut",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJ1c2VybmFtZSI6ImFkbWluIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNjYyMTY0ODU4LCJleHAiOjE2NjIyNjQ4NTg4fQ"
            }
          },
          {
            "name": "sessionId",
            "in": "cookie",
            "description": "session id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "60c72b2f4f1a4e3d8c7e4b3a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged out successfully"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/users/count": {
      "get": {
        "summary": "Get total number of users",
        "operationId": "getUsersCount",
        "description": "Returns the total number of users in the database.",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Total number of users fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "usersQuantity"
                  ],
                  "properties": {
                    "usersQuantity": {
                      "type": "integer",
                      "example": 150
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "summary": "Update user data and avatar",
        "description": "Updates user data including uploading a new avatar",
        "operationId": "Update",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "The user's avatar image"
                  },
                  "userData": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Update successful"
                    },
                    "user": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "john@gmail.com"
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "example": "12345678"
          },
          "gender": {
            "description": "User's gender",
            "type": "string",
            "enum": [
              "undefined",
              "woman",
              "man"
            ],
            "example": "undefined"
          },
          "weight": {
            "description": "User's weight",
            "type": "number",
            "example": 70
          },
          "activeTimeSports": {
            "description": "User's active time in sports",
            "type": "number",
            "example": 5
          },
          "waterDrink": {
            "description": "User's water consumption in liters",
            "type": "number",
            "example": 1.8
          },
          "token": {
            "description": "User's authentication token",
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
          },
          "tempToken": {
            "description": "User's temporary token",
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
          },
          "avatarURL": {
            "description": "Link to User's avatar",
            "type": "string",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          },
          "googleId": {
            "description": "User's Google ID",
            "type": "string",
            "example": "1234567890"
          },
          "verify": {
            "description": "User's verification status",
            "type": "boolean",
            "example": false
          },
          "verificationToken": {
            "description": "User's verification token",
            "type": "string",
            "example": "1e06baac-fbeb-4586-97ca-85f69cccc744"
          },
          "displayName": {
            "description": "User's display name",
            "type": "string",
            "example": "JohnD"
          }
        }
      },
      "session": {
        "type": "object",
        "required": [
          "userId",
          "accessToken",
          "refreshToken",
          "accessTokenValidUntil",
          "refreshTokenValidUntil"
        ],
        "properties": {
          "userId": {
            "description": "ID of the user associated with the session",
            "type": "string",
            "format": "uuid",
            "example": "507f1f77bcf86cd799439011"
          },
          "accessToken": {
            "description": "Access token for the session",
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
          },
          "refreshToken": {
            "description": "Refresh token for the session",
            "type": "string",
            "example": "dGhpcyBpcyBhIHJlZnJlc2ggdG9rZW4gdGhhdCBpcyB2ZXJ5IGxvbmc="
          },
          "accessTokenValidUntil": {
            "description": "Expiration date of the access token",
            "type": "string",
            "format": "date-time",
            "example": "2024-12-31T23:59:59Z"
          },
          "refreshTokenValidUntil": {
            "description": "Expiration date of the refresh token",
            "type": "string",
            "format": "date-time",
            "example": "2025-12-31T23:59:59Z"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad request!",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad request!"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Contact not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contact not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Something went wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}